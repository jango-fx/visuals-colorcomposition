<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1920 1080"
    onload="init(evt, true)">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono');

        #title {
            font-size: 80px;
            dominant-baseline: hanging;
            font-family: 'Roboto Mono', monospace;
            font-weight: bold;
        }

        .box {
            width: 260px;
            height: 1080px;
        }
    </style>

    <rect id="bg" onclick="click(evt.target)" width="1920" height="1080" fill="black" />
    <g id="swatches">
        <rect id="box1" class="box" onclick="click(evt.target)" x="0" y="0" fill="hsl(43, 15%, 20%)" />
        <rect id="box2" class="box" onclick="click(evt.target)" x="276.7" y="0" fill="hsl(43, 30%, 25%)" />
        <rect id="box3" class="box" onclick="click(evt.target)" x="553.3" y="0" fill="hsl(43, 45%, 30%)" />
        <rect id="box4" class="box" onclick="click(evt.target)" x="830.0" y="0" fill="hsl(43, 60%, 35%)" />
        <rect id="box5" class="box" onclick="click(evt.target)" x="1106.7" y="0" fill="hsl(43, 70%, 40%)" />
        <rect id="box6" class="box" onclick="click(evt.target)" x="1383.3" y="0" fill="hsl(43, 85%, 45%)" />
        <rect id="box7" class="box" onclick="click(evt.target)" x="1660.0" y="0" fill="hsl(43, 100%, 50%)" />
    </g>
    <text id="title" x="100" y="100" fill="white" stroke="none"></text>

    <script xlink:href="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js@latest/dist/svg.min.js" />
    <script>
        <![CDATA[

        var num = 7;
        var hue = 35;

        function init(evt, showTitle)
        {
            if (showTitle) setTitle();
            computeRandomColors(num);
        }

        function click(target)
        {
            console.log("click");
            
            hue = random(0, 360);

            var svg = SVG('svg')
            var swatches = document.getElementById('swatches')
            swatches.remove();
            swatches = svg.group({ id: 'swatches' }).after(SVG('#title'));
            
            num = Math.floor(7+Math.random()*10);
            let startX = 0;
            let startY = 0;
            let pitch = 10;
            let w = (1920-(num-1)*pitch)/num;
            let h = 1080;
            for (let ix = 0; ix < num; ix++) {
                rect = svg.rect(w, h).attr({id: 'box'+(ix+1), x: startX+ix*(w+pitch), y: startY, fill: 'white', onclick: 'click(evt.target)'});
                rect.addTo(swatches);
            }
            computeRandomColors();
        }
        

        function computeRandomColors() 
        {
            console.log("compute colors");

            for(let i = 0; i < num; i++)
            {
                var probability = Math.pow(Math.random(),4);
                probability = clamp(probability, 0.0, 1.0);
                hue = Math.random()*5 + hue;
                var sat = probability*95 + 10;
                var brt = 50;
                var hslColor = "hsl(" + hue + ", " + sat + "%, " + brt + "%)";
                var id = 'box'+(i+1);
                document.getElementById(id).style.fill = hslColor;
            }
        }

        function setTitle() 
        {
            if (navigator.language.split('-')[0] == 'de')
            {
                document.getElementById('title').innerHTML = 'QualitÃ¤tskontrast';
            }
            else
            {
                document.getElementById('title').innerHTML = 'Quality Contrast';
            }
        }

        const random = (min, max) => Math.random() * (max - min) + min;
        
        const clamp = (num, min, max) => Math.min(Math.max(num, min), max);

        const map = (value, istart, istop, ostart, ostop) => {ostart + (ostop - ostart) * ((value - istart) / (istop - istart))};

        ]]>
    </script>

</svg>